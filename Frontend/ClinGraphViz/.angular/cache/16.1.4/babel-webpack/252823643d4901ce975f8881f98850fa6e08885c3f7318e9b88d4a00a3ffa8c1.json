{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../svg-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AstPageComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(1, \"svg\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.imageString, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class AstPageComponent {\n  constructor(svgService) {\n    this.svgService = svgService;\n    this.requestForm = new FormGroup({\n      program: new FormControl(''),\n      encoding: new FormControl('')\n    });\n    this.imageString = [];\n  }\n  onSubmit() {\n    console.log(\"onSubmit called\");\n    const formData = this.requestForm.value;\n    const graphreq = {\n      ast: true,\n      ...formData\n    };\n    let observer = {\n      next: data => {\n        this.imageString = data;\n        console.log(data);\n      }\n    };\n    this.svgService.post(graphreq).subscribe(observer);\n  }\n}\nAstPageComponent.ɵfac = function AstPageComponent_Factory(t) {\n  return new (t || AstPageComponent)(i0.ɵɵdirectiveInject(i1.SvgServiceService));\n};\nAstPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AstPageComponent,\n  selectors: [[\"app-ast-page\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"id\", \"programField\", \"formControlName\", \"program\"], [\"id\", \"childCheck\", \"type\", \"checkbox\"], [\"name\", \"submit\", \"type\", \"submit\", \"value\", \"submit\"], [4, \"ngIf\"], [3, \"innerHTML\"]],\n  template: function AstPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AstPageComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"textarea\", 1);\n      i0.ɵɵtext(2, \"        Enter your ASP-Program here.\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Options\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Show Children \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\")(10, \"input\", 2)(11, \"br\")(12, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, AstPageComponent_div_13_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.requestForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.imageString.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.imageString);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","i0","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","imageString","ɵɵsanitizeHtml","AstPageComponent","constructor","svgService","requestForm","program","encoding","onSubmit","console","log","formData","value","graphreq","ast","observer","next","data","post","subscribe","ɵɵdirectiveInject","i1","SvgServiceService","selectors","decls","vars","consts","template","AstPageComponent_Template","rf","ctx","ɵɵlistener","AstPageComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵtemplate","AstPageComponent_div_13_Template","length","ɵɵtextInterpolate"],"sources":["C:\\Program Files (x86)\\Potassco\\ClinGraphViz\\ClinGraphViz\\Frontend\\ClinGraphViz\\src\\app\\ast-page\\ast-page.component.ts","C:\\Program Files (x86)\\Potassco\\ClinGraphViz\\ClinGraphViz\\Frontend\\ClinGraphViz\\src\\app\\ast-page\\ast-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SvgServiceService } from '../svg-service.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { GraphRequest } from '../types/graph_request';\n@Component({\n  selector: 'app-ast-page',\n  templateUrl: './ast-page.component.html',\n  styleUrls: ['./ast-page.component.scss']\n})\nexport class AstPageComponent {\n\n  requestForm = new FormGroup({\n    program: new FormControl(''),\n    encoding: new FormControl('')\n  })\n\n  imageString: String[] = []\n  \n\n  constructor(\n    private svgService : SvgServiceService\n  ) {}\n\n  \n  onSubmit(){\n    console.log(\"onSubmit called\")\n    const formData = this.requestForm.value; \n    const graphreq = {ast:true, ...formData} as GraphRequest\n    let observer = {\n      next: (data:String[]) => {\n        this.imageString = data; \n        console.log(data)\n      }\n    }\n    this.svgService.post(graphreq).subscribe(\n      observer)\n    }\n    \n  }\n\n\n\n","<form [formGroup] =\"requestForm\" (ngSubmit)=\"onSubmit()\" >\n    <textarea id=\"programField\" formControlName=\"program\">\n        Enter your ASP-Program here.\n    </textarea>\n    <br>\n    <label>Options</label>\n    <br>\n    <label>Show Children </label>\n    <br>\n<input id=\"childCheck\" type=\"checkbox\"/>\n<br>\n<input name=\"submit\" type=\"submit\" value=\"submit\"/> \n</form>\n<div *ngIf=\"imageString.length > 0\">\n    <svg [innerHTML]=\"imageString\"></svg>\n</div>\n<br>\n<div>{{imageString}}</div>\n\n\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;;;;ICWvDC,EAAA,CAAAC,cAAA,UAAoC;IAChCD,EAAA,CAAAE,cAAA,EAA+B;IAA/BF,EAAA,CAAAG,SAAA,aAAqC;IACzCH,EAAA,CAAAI,YAAA,EAAM;;;;IADGJ,EAAA,CAAAK,SAAA,GAAyB;IAAzBL,EAAA,CAAAM,UAAA,cAAAC,MAAA,CAAAC,WAAA,EAAAR,EAAA,CAAAS,cAAA,CAAyB;;;ADLlC,OAAM,MAAOC,gBAAgB;EAU3BC,YACUC,UAA8B;IAA9B,KAAAA,UAAU,GAAVA,UAAU;IATpB,KAAAC,WAAW,GAAG,IAAIf,SAAS,CAAC;MAC1BgB,OAAO,EAAE,IAAIf,WAAW,CAAC,EAAE,CAAC;MAC5BgB,QAAQ,EAAE,IAAIhB,WAAW,CAAC,EAAE;KAC7B,CAAC;IAEF,KAAAS,WAAW,GAAa,EAAE;EAKvB;EAGHQ,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK;IACvC,MAAMC,QAAQ,GAAG;MAACC,GAAG,EAAC,IAAI;MAAE,GAAGH;IAAQ,CAAiB;IACxD,IAAII,QAAQ,GAAG;MACbC,IAAI,EAAGC,IAAa,IAAI;QACtB,IAAI,CAACjB,WAAW,GAAGiB,IAAI;QACvBR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;MACnB;KACD;IACD,IAAI,CAACb,UAAU,CAACc,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CACtCJ,QAAQ,CAAC;EACX;;AA3BSb,gBAAgB,C;mBAAhBA,gBAAgB,EAAAV,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,iBAAA;AAAA;AAAhBpB,gBAAgB,C;QAAhBA,gBAAgB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BrC,EAAA,CAAAC,cAAA,cAA0D;MAAzBD,EAAA,CAAAuC,UAAA,sBAAAC,mDAAA;QAAA,OAAYF,GAAA,CAAAtB,QAAA,EAAU;MAAA,EAAC;MACpDhB,EAAA,CAAAC,cAAA,kBAAsD;MAClDD,EAAA,CAAAyC,MAAA,iDACJ;MAAAzC,EAAA,CAAAI,YAAA,EAAW;MACXJ,EAAA,CAAAG,SAAA,SAAI;MACJH,EAAA,CAAAC,cAAA,YAAO;MAAAD,EAAA,CAAAyC,MAAA,cAAO;MAAAzC,EAAA,CAAAI,YAAA,EAAQ;MACtBJ,EAAA,CAAAG,SAAA,SAAI;MACJH,EAAA,CAAAC,cAAA,YAAO;MAAAD,EAAA,CAAAyC,MAAA,qBAAc;MAAAzC,EAAA,CAAAI,YAAA,EAAQ;MAC7BJ,EAAA,CAAAG,SAAA,SAAI;MAIRH,EAAA,CAAAI,YAAA,EAAO;MACPJ,EAAA,CAAA0C,UAAA,KAAAC,gCAAA,iBAEM;MACN3C,EAAA,CAAAG,SAAA,UAAI;MACJH,EAAA,CAAAC,cAAA,WAAK;MAAAD,EAAA,CAAAyC,MAAA,IAAe;MAAAzC,EAAA,CAAAI,YAAA,EAAM;;;MAjBpBJ,EAAA,CAAAM,UAAA,cAAAgC,GAAA,CAAAzB,WAAA,CAA0B;MAa1Bb,EAAA,CAAAK,SAAA,IAA4B;MAA5BL,EAAA,CAAAM,UAAA,SAAAgC,GAAA,CAAA9B,WAAA,CAAAoC,MAAA,KAA4B;MAI7B5C,EAAA,CAAAK,SAAA,GAAe;MAAfL,EAAA,CAAA6C,iBAAA,CAAAP,GAAA,CAAA9B,WAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}