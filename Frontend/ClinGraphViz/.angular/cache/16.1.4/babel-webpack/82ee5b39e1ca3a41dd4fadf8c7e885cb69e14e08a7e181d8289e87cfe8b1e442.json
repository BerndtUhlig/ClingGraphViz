{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../svg-service.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AstPageComponent {\n  constructor(svgService) {\n    this.svgService = svgService;\n    this.requestForm = new FormGroup({\n      program: new FormControl(''),\n      encoding: new FormControl('')\n    });\n    this.imageString = [];\n  }\n}\nAstPageComponent.ɵfac = function AstPageComponent_Factory(t) {\n  return new (t || AstPageComponent)(i0.ɵɵdirectiveInject(i1.SvgServiceService));\n};\nAstPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AstPageComponent,\n  selectors: [[\"app-ast-page\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [\"id\", \"programField\", \"formControlName\", \"program\"], [\"id\", \"childCheck\", \"type\", \"checkbox\"], [\"name\", \"submit\", \"type\", \"submit\"]],\n  template: function AstPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"textarea\", 1);\n      i0.ɵɵtext(2, \"        Enter your ASP-Program here.\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Options\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Show Children \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\")(10, \"input\", 2)(11, \"input\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.requestForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","AstPageComponent","constructor","svgService","requestForm","program","encoding","imageString","i0","ɵɵdirectiveInject","i1","SvgServiceService","selectors","decls","vars","consts","template","AstPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Program Files (x86)\\Potassco\\ClinGraphViz\\ClinGraphViz\\Frontend\\ClinGraphViz\\src\\app\\ast-page\\ast-page.component.ts","C:\\Program Files (x86)\\Potassco\\ClinGraphViz\\ClinGraphViz\\Frontend\\ClinGraphViz\\src\\app\\ast-page\\ast-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SvgServiceService } from '../svg-service.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { GraphRequest } from '../types/graph_request';\n@Component({\n  selector: 'app-ast-page',\n  templateUrl: './ast-page.component.html',\n  styleUrls: ['./ast-page.component.scss']\n})\nexport class AstPageComponent {\n\n  requestForm = new FormGroup({\n    program: new FormControl(''),\n    encoding: new FormControl('')\n  })\n\n  imageString: String[] = []\n  \n\n  constructor(\n    private svgService : SvgServiceService\n  ) {}\n\n  /** \n  onSubmit(){\n    const formData = this.requestForm.value; \n    const graphreq = {ast:true, ...formData} as GraphRequest\n    let observer = {\n      next: (data:String[]) => {\n        this.imageString = data; \n        console.log(data)\n      }\n    }\n    this.svgService.post(graphreq).subscribe(\n      observer)\n    }\n    */\n  }\n\n\n\n","<form [formGroup] =\"requestForm\" >\n    <textarea id=\"programField\" formControlName=\"program\">\n        Enter your ASP-Program here.\n    </textarea>\n    <br>\n    <label>Options</label>\n    <br>\n    <label>Show Children </label>\n    <br>\n<input id=\"childCheck\" type=\"checkbox\"/>\n<input name=\"submit\" type=\"submit\"/> \n</form>\n<!--\n<svg [innerHTML]=\"imageString\"></svg>\n\n-->\n\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;AAOvD,OAAM,MAAOC,gBAAgB;EAU3BC,YACUC,UAA8B;IAA9B,KAAAA,UAAU,GAAVA,UAAU;IATpB,KAAAC,WAAW,GAAG,IAAIL,SAAS,CAAC;MAC1BM,OAAO,EAAE,IAAIL,WAAW,CAAC,EAAE,CAAC;MAC5BM,QAAQ,EAAE,IAAIN,WAAW,CAAC,EAAE;KAC7B,CAAC;IAEF,KAAAO,WAAW,GAAa,EAAE;EAKvB;;AAZQN,gBAAgB,C;mBAAhBA,gBAAgB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA;AAAA;AAAhBV,gBAAgB,C;QAAhBA,gBAAgB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BV,EAAA,CAAAY,cAAA,cAAkC;MAE1BZ,EAAA,CAAAa,MAAA,iDACJ;MAAAb,EAAA,CAAAc,YAAA,EAAW;MACXd,EAAA,CAAAe,SAAA,SAAI;MACJf,EAAA,CAAAY,cAAA,YAAO;MAAAZ,EAAA,CAAAa,MAAA,cAAO;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACtBd,EAAA,CAAAe,SAAA,SAAI;MACJf,EAAA,CAAAY,cAAA,YAAO;MAAAZ,EAAA,CAAAa,MAAA,qBAAc;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAC7Bd,EAAA,CAAAe,SAAA,SAAI;MAGRf,EAAA,CAAAc,YAAA,EAAO;;;MAXDd,EAAA,CAAAgB,UAAA,cAAAL,GAAA,CAAAf,WAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}