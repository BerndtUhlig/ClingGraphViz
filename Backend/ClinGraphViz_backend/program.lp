ast_node(0,type,"ASTSequence").
ast_node(0,level,0).
ast_node(1,type,"AST").
ast_node(1,level,1).
ast_node(1,variant,"Program").
ast_node(1,value,"#program base.").
ast_node(2,type,"Location").
ast_node(2,level,2).
ast_node(3,type,"Position").
ast_node(3,level,3).
ast_node(4,type,"int").
ast_node(4,level,4).
ast_node(4,value,1).
ast_node(5,type,"str").
ast_node(5,level,4).
ast_node(5,value,"program.lp").
ast_node(6,type,"int").
ast_node(6,level,4).
ast_node(6,value,1).
ast_node(7,type,"Position").
ast_node(7,level,3).
ast_node(8,type,"int").
ast_node(8,level,4).
ast_node(8,value,1).
ast_node(9,type,"str").
ast_node(9,level,4).
ast_node(9,value,"program.lp").
ast_node(10,type,"int").
ast_node(10,level,4).
ast_node(10,value,1).
ast_node(11,type,"str").
ast_node(11,level,2).
ast_node(11,value,"base").
ast_node(12,type,"ASTSequence").
ast_node(12,level,2).
ast_node(13,type,"AST").
ast_node(13,level,1).
ast_node(13,variant,"Rule").
ast_node(13,value,"motive(harry).").
ast_node(14,type,"Location").
ast_node(14,level,2).
ast_node(15,type,"Position").
ast_node(15,level,3).
ast_node(16,type,"int").
ast_node(16,level,4).
ast_node(16,value,1).
ast_node(17,type,"str").
ast_node(17,level,4).
ast_node(17,value,"program.lp").
ast_node(18,type,"int").
ast_node(18,level,4).
ast_node(18,value,2).
ast_node(19,type,"Position").
ast_node(19,level,3).
ast_node(20,type,"int").
ast_node(20,level,4).
ast_node(20,value,15).
ast_node(21,type,"str").
ast_node(21,level,4).
ast_node(21,value,"program.lp").
ast_node(22,type,"int").
ast_node(22,level,4).
ast_node(22,value,2).
ast_node(23,type,"AST").
ast_node(23,level,2).
ast_node(23,variant,"Literal").
ast_node(23,value,"motive(harry)").
ast_node(24,type,"Location").
ast_node(24,level,3).
ast_node(25,type,"Position").
ast_node(25,level,4).
ast_node(26,type,"int").
ast_node(26,level,5).
ast_node(26,value,1).
ast_node(27,type,"str").
ast_node(27,level,5).
ast_node(27,value,"program.lp").
ast_node(28,type,"int").
ast_node(28,level,5).
ast_node(28,value,2).
ast_node(29,type,"Position").
ast_node(29,level,4).
ast_node(30,type,"int").
ast_node(30,level,5).
ast_node(30,value,14).
ast_node(31,type,"str").
ast_node(31,level,5).
ast_node(31,value,"program.lp").
ast_node(32,type,"int").
ast_node(32,level,5).
ast_node(32,value,2).
ast_node(33,type,"int").
ast_node(33,level,3).
ast_node(33,value,0).
ast_node(34,type,"AST").
ast_node(34,level,3).
ast_node(34,variant,"SymbolicAtom").
ast_node(34,value,"motive(harry)").
ast_node(35,type,"AST").
ast_node(35,level,4).
ast_node(35,variant,"Function").
ast_node(35,value,"motive(harry)").
ast_node(36,type,"Location").
ast_node(36,level,5).
ast_node(37,type,"Position").
ast_node(37,level,6).
ast_node(38,type,"int").
ast_node(38,level,7).
ast_node(38,value,1).
ast_node(39,type,"str").
ast_node(39,level,7).
ast_node(39,value,"program.lp").
ast_node(40,type,"int").
ast_node(40,level,7).
ast_node(40,value,2).
ast_node(41,type,"Position").
ast_node(41,level,6).
ast_node(42,type,"int").
ast_node(42,level,7).
ast_node(42,value,14).
ast_node(43,type,"str").
ast_node(43,level,7).
ast_node(43,value,"program.lp").
ast_node(44,type,"int").
ast_node(44,level,7).
ast_node(44,value,2).
ast_node(45,type,"str").
ast_node(45,level,5).
ast_node(45,value,"motive").
ast_node(46,type,"ASTSequence").
ast_node(46,level,5).
ast_node(47,type,"AST").
ast_node(47,level,6).
ast_node(47,variant,"SymbolicTerm").
ast_node(47,value,"harry").
ast_node(48,type,"Location").
ast_node(48,level,7).
ast_node(49,type,"Position").
ast_node(49,level,8).
ast_node(50,type,"int").
ast_node(50,level,9).
ast_node(50,value,8).
ast_node(51,type,"str").
ast_node(51,level,9).
ast_node(51,value,"program.lp").
ast_node(52,type,"int").
ast_node(52,level,9).
ast_node(52,value,2).
ast_node(53,type,"Position").
ast_node(53,level,8).
ast_node(54,type,"int").
ast_node(54,level,9).
ast_node(54,value,13).
ast_node(55,type,"str").
ast_node(55,level,9).
ast_node(55,value,"program.lp").
ast_node(56,type,"int").
ast_node(56,level,9).
ast_node(56,value,2).
ast_node(57,type,"Symbol").
ast_node(57,level,7).
ast_node(57,value,"harry").
ast_node(58,type,"int").
ast_node(58,level,5).
ast_node(58,value,0).
ast_node(59,type,"ASTSequence").
ast_node(59,level,2).
ast_node(60,type,"AST").
ast_node(60,level,1).
ast_node(60,variant,"Rule").
ast_node(60,value,"motive(sally).").
ast_node(61,type,"Location").
ast_node(61,level,2).
ast_node(62,type,"Position").
ast_node(62,level,3).
ast_node(63,type,"int").
ast_node(63,level,4).
ast_node(63,value,1).
ast_node(64,type,"str").
ast_node(64,level,4).
ast_node(64,value,"program.lp").
ast_node(65,type,"int").
ast_node(65,level,4).
ast_node(65,value,3).
ast_node(66,type,"Position").
ast_node(66,level,3).
ast_node(67,type,"int").
ast_node(67,level,4).
ast_node(67,value,15).
ast_node(68,type,"str").
ast_node(68,level,4).
ast_node(68,value,"program.lp").
ast_node(69,type,"int").
ast_node(69,level,4).
ast_node(69,value,3).
ast_node(70,type,"AST").
ast_node(70,level,2).
ast_node(70,variant,"Literal").
ast_node(70,value,"motive(sally)").
ast_node(71,type,"Location").
ast_node(71,level,3).
ast_node(72,type,"Position").
ast_node(72,level,4).
ast_node(73,type,"int").
ast_node(73,level,5).
ast_node(73,value,1).
ast_node(74,type,"str").
ast_node(74,level,5).
ast_node(74,value,"program.lp").
ast_node(75,type,"int").
ast_node(75,level,5).
ast_node(75,value,3).
ast_node(76,type,"Position").
ast_node(76,level,4).
ast_node(77,type,"int").
ast_node(77,level,5).
ast_node(77,value,14).
ast_node(78,type,"str").
ast_node(78,level,5).
ast_node(78,value,"program.lp").
ast_node(79,type,"int").
ast_node(79,level,5).
ast_node(79,value,3).
ast_node(80,type,"int").
ast_node(80,level,3).
ast_node(80,value,0).
ast_node(81,type,"AST").
ast_node(81,level,3).
ast_node(81,variant,"SymbolicAtom").
ast_node(81,value,"motive(sally)").
ast_node(82,type,"AST").
ast_node(82,level,4).
ast_node(82,variant,"Function").
ast_node(82,value,"motive(sally)").
ast_node(83,type,"Location").
ast_node(83,level,5).
ast_node(84,type,"Position").
ast_node(84,level,6).
ast_node(85,type,"int").
ast_node(85,level,7).
ast_node(85,value,1).
ast_node(86,type,"str").
ast_node(86,level,7).
ast_node(86,value,"program.lp").
ast_node(87,type,"int").
ast_node(87,level,7).
ast_node(87,value,3).
ast_node(88,type,"Position").
ast_node(88,level,6).
ast_node(89,type,"int").
ast_node(89,level,7).
ast_node(89,value,14).
ast_node(90,type,"str").
ast_node(90,level,7).
ast_node(90,value,"program.lp").
ast_node(91,type,"int").
ast_node(91,level,7).
ast_node(91,value,3).
ast_node(92,type,"str").
ast_node(92,level,5).
ast_node(92,value,"motive").
ast_node(93,type,"ASTSequence").
ast_node(93,level,5).
ast_node(94,type,"AST").
ast_node(94,level,6).
ast_node(94,variant,"SymbolicTerm").
ast_node(94,value,"sally").
ast_node(95,type,"Location").
ast_node(95,level,7).
ast_node(96,type,"Position").
ast_node(96,level,8).
ast_node(97,type,"int").
ast_node(97,level,9).
ast_node(97,value,8).
ast_node(98,type,"str").
ast_node(98,level,9).
ast_node(98,value,"program.lp").
ast_node(99,type,"int").
ast_node(99,level,9).
ast_node(99,value,3).
ast_node(100,type,"Position").
ast_node(100,level,8).
ast_node(101,type,"int").
ast_node(101,level,9).
ast_node(101,value,13).
ast_node(102,type,"str").
ast_node(102,level,9).
ast_node(102,value,"program.lp").
ast_node(103,type,"int").
ast_node(103,level,9).
ast_node(103,value,3).
ast_node(104,type,"Symbol").
ast_node(104,level,7).
ast_node(104,value,"sally").
ast_node(105,type,"int").
ast_node(105,level,5).
ast_node(105,value,0).
ast_node(106,type,"ASTSequence").
ast_node(106,level,2).
ast_node(107,type,"AST").
ast_node(107,level,1).
ast_node(107,variant,"Rule").
ast_node(107,value,"guilty(harry).").
ast_node(108,type,"Location").
ast_node(108,level,2).
ast_node(109,type,"Position").
ast_node(109,level,3).
ast_node(110,type,"int").
ast_node(110,level,4).
ast_node(110,value,1).
ast_node(111,type,"str").
ast_node(111,level,4).
ast_node(111,value,"program.lp").
ast_node(112,type,"int").
ast_node(112,level,4).
ast_node(112,value,4).
ast_node(113,type,"Position").
ast_node(113,level,3).
ast_node(114,type,"int").
ast_node(114,level,4).
ast_node(114,value,15).
ast_node(115,type,"str").
ast_node(115,level,4).
ast_node(115,value,"program.lp").
ast_node(116,type,"int").
ast_node(116,level,4).
ast_node(116,value,4).
ast_node(117,type,"AST").
ast_node(117,level,2).
ast_node(117,variant,"Literal").
ast_node(117,value,"guilty(harry)").
ast_node(118,type,"Location").
ast_node(118,level,3).
ast_node(119,type,"Position").
ast_node(119,level,4).
ast_node(120,type,"int").
ast_node(120,level,5).
ast_node(120,value,1).
ast_node(121,type,"str").
ast_node(121,level,5).
ast_node(121,value,"program.lp").
ast_node(122,type,"int").
ast_node(122,level,5).
ast_node(122,value,4).
ast_node(123,type,"Position").
ast_node(123,level,4).
ast_node(124,type,"int").
ast_node(124,level,5).
ast_node(124,value,14).
ast_node(125,type,"str").
ast_node(125,level,5).
ast_node(125,value,"program.lp").
ast_node(126,type,"int").
ast_node(126,level,5).
ast_node(126,value,4).
ast_node(127,type,"int").
ast_node(127,level,3).
ast_node(127,value,0).
ast_node(128,type,"AST").
ast_node(128,level,3).
ast_node(128,variant,"SymbolicAtom").
ast_node(128,value,"guilty(harry)").
ast_node(129,type,"AST").
ast_node(129,level,4).
ast_node(129,variant,"Function").
ast_node(129,value,"guilty(harry)").
ast_node(130,type,"Location").
ast_node(130,level,5).
ast_node(131,type,"Position").
ast_node(131,level,6).
ast_node(132,type,"int").
ast_node(132,level,7).
ast_node(132,value,1).
ast_node(133,type,"str").
ast_node(133,level,7).
ast_node(133,value,"program.lp").
ast_node(134,type,"int").
ast_node(134,level,7).
ast_node(134,value,4).
ast_node(135,type,"Position").
ast_node(135,level,6).
ast_node(136,type,"int").
ast_node(136,level,7).
ast_node(136,value,14).
ast_node(137,type,"str").
ast_node(137,level,7).
ast_node(137,value,"program.lp").
ast_node(138,type,"int").
ast_node(138,level,7).
ast_node(138,value,4).
ast_node(139,type,"str").
ast_node(139,level,5).
ast_node(139,value,"guilty").
ast_node(140,type,"ASTSequence").
ast_node(140,level,5).
ast_node(141,type,"AST").
ast_node(141,level,6).
ast_node(141,variant,"SymbolicTerm").
ast_node(141,value,"harry").
ast_node(142,type,"Location").
ast_node(142,level,7).
ast_node(143,type,"Position").
ast_node(143,level,8).
ast_node(144,type,"int").
ast_node(144,level,9).
ast_node(144,value,8).
ast_node(145,type,"str").
ast_node(145,level,9).
ast_node(145,value,"program.lp").
ast_node(146,type,"int").
ast_node(146,level,9).
ast_node(146,value,4).
ast_node(147,type,"Position").
ast_node(147,level,8).
ast_node(148,type,"int").
ast_node(148,level,9).
ast_node(148,value,13).
ast_node(149,type,"str").
ast_node(149,level,9).
ast_node(149,value,"program.lp").
ast_node(150,type,"int").
ast_node(150,level,9).
ast_node(150,value,4).
ast_node(151,type,"Symbol").
ast_node(151,level,7).
ast_node(151,value,"harry").
ast_node(152,type,"int").
ast_node(152,level,5).
ast_node(152,value,0).
ast_node(153,type,"ASTSequence").
ast_node(153,level,2).
ast_node(154,type,"AST").
ast_node(154,level,1).
ast_node(154,variant,"Rule").
ast_node(154,value,"innocent(Suspect) :- motive(Suspect); not guilty(Suspect).").
ast_node(155,type,"Location").
ast_node(155,level,2).
ast_node(156,type,"Position").
ast_node(156,level,3).
ast_node(157,type,"int").
ast_node(157,level,4).
ast_node(157,value,1).
ast_node(158,type,"str").
ast_node(158,level,4).
ast_node(158,value,"program.lp").
ast_node(159,type,"int").
ast_node(159,level,4).
ast_node(159,value,7).
ast_node(160,type,"Position").
ast_node(160,level,3).
ast_node(161,type,"int").
ast_node(161,level,4).
ast_node(161,value,59).
ast_node(162,type,"str").
ast_node(162,level,4).
ast_node(162,value,"program.lp").
ast_node(163,type,"int").
ast_node(163,level,4).
ast_node(163,value,7).
ast_node(164,type,"AST").
ast_node(164,level,2).
ast_node(164,variant,"Literal").
ast_node(164,value,"innocent(Suspect)").
ast_node(165,type,"Location").
ast_node(165,level,3).
ast_node(166,type,"Position").
ast_node(166,level,4).
ast_node(167,type,"int").
ast_node(167,level,5).
ast_node(167,value,1).
ast_node(168,type,"str").
ast_node(168,level,5).
ast_node(168,value,"program.lp").
ast_node(169,type,"int").
ast_node(169,level,5).
ast_node(169,value,7).
ast_node(170,type,"Position").
ast_node(170,level,4).
ast_node(171,type,"int").
ast_node(171,level,5).
ast_node(171,value,18).
ast_node(172,type,"str").
ast_node(172,level,5).
ast_node(172,value,"program.lp").
ast_node(173,type,"int").
ast_node(173,level,5).
ast_node(173,value,7).
ast_node(174,type,"int").
ast_node(174,level,3).
ast_node(174,value,0).
ast_node(175,type,"AST").
ast_node(175,level,3).
ast_node(175,variant,"SymbolicAtom").
ast_node(175,value,"innocent(Suspect)").
ast_node(176,type,"AST").
ast_node(176,level,4).
ast_node(176,variant,"Function").
ast_node(176,value,"innocent(Suspect)").
ast_node(177,type,"Location").
ast_node(177,level,5).
ast_node(178,type,"Position").
ast_node(178,level,6).
ast_node(179,type,"int").
ast_node(179,level,7).
ast_node(179,value,1).
ast_node(180,type,"str").
ast_node(180,level,7).
ast_node(180,value,"program.lp").
ast_node(181,type,"int").
ast_node(181,level,7).
ast_node(181,value,7).
ast_node(182,type,"Position").
ast_node(182,level,6).
ast_node(183,type,"int").
ast_node(183,level,7).
ast_node(183,value,18).
ast_node(184,type,"str").
ast_node(184,level,7).
ast_node(184,value,"program.lp").
ast_node(185,type,"int").
ast_node(185,level,7).
ast_node(185,value,7).
ast_node(186,type,"str").
ast_node(186,level,5).
ast_node(186,value,"innocent").
ast_node(187,type,"ASTSequence").
ast_node(187,level,5).
ast_node(188,type,"AST").
ast_node(188,level,6).
ast_node(188,variant,"Variable").
ast_node(188,value,"Suspect").
ast_node(189,type,"Location").
ast_node(189,level,7).
ast_node(190,type,"Position").
ast_node(190,level,8).
ast_node(191,type,"int").
ast_node(191,level,9).
ast_node(191,value,10).
ast_node(192,type,"str").
ast_node(192,level,9).
ast_node(192,value,"program.lp").
ast_node(193,type,"int").
ast_node(193,level,9).
ast_node(193,value,7).
ast_node(194,type,"Position").
ast_node(194,level,8).
ast_node(195,type,"int").
ast_node(195,level,9).
ast_node(195,value,17).
ast_node(196,type,"str").
ast_node(196,level,9).
ast_node(196,value,"program.lp").
ast_node(197,type,"int").
ast_node(197,level,9).
ast_node(197,value,7).
ast_node(198,type,"str").
ast_node(198,level,7).
ast_node(198,value,"Suspect").
ast_node(199,type,"int").
ast_node(199,level,5).
ast_node(199,value,0).
ast_node(200,type,"ASTSequence").
ast_node(200,level,2).
ast_node(201,type,"AST").
ast_node(201,level,3).
ast_node(201,variant,"Literal").
ast_node(201,value,"motive(Suspect)").
ast_node(202,type,"Location").
ast_node(202,level,4).
ast_node(203,type,"Position").
ast_node(203,level,5).
ast_node(204,type,"int").
ast_node(204,level,6).
ast_node(204,value,22).
ast_node(205,type,"str").
ast_node(205,level,6).
ast_node(205,value,"program.lp").
ast_node(206,type,"int").
ast_node(206,level,6).
ast_node(206,value,7).
ast_node(207,type,"Position").
ast_node(207,level,5).
ast_node(208,type,"int").
ast_node(208,level,6).
ast_node(208,value,37).
ast_node(209,type,"str").
ast_node(209,level,6).
ast_node(209,value,"program.lp").
ast_node(210,type,"int").
ast_node(210,level,6).
ast_node(210,value,7).
ast_node(211,type,"int").
ast_node(211,level,4).
ast_node(211,value,0).
ast_node(212,type,"AST").
ast_node(212,level,4).
ast_node(212,variant,"SymbolicAtom").
ast_node(212,value,"motive(Suspect)").
ast_node(213,type,"AST").
ast_node(213,level,5).
ast_node(213,variant,"Function").
ast_node(213,value,"motive(Suspect)").
ast_node(214,type,"Location").
ast_node(214,level,6).
ast_node(215,type,"Position").
ast_node(215,level,7).
ast_node(216,type,"int").
ast_node(216,level,8).
ast_node(216,value,22).
ast_node(217,type,"str").
ast_node(217,level,8).
ast_node(217,value,"program.lp").
ast_node(218,type,"int").
ast_node(218,level,8).
ast_node(218,value,7).
ast_node(219,type,"Position").
ast_node(219,level,7).
ast_node(220,type,"int").
ast_node(220,level,8).
ast_node(220,value,37).
ast_node(221,type,"str").
ast_node(221,level,8).
ast_node(221,value,"program.lp").
ast_node(222,type,"int").
ast_node(222,level,8).
ast_node(222,value,7).
ast_node(223,type,"str").
ast_node(223,level,6).
ast_node(223,value,"motive").
ast_node(224,type,"ASTSequence").
ast_node(224,level,6).
ast_node(225,type,"AST").
ast_node(225,level,7).
ast_node(225,variant,"Variable").
ast_node(225,value,"Suspect").
ast_node(226,type,"Location").
ast_node(226,level,8).
ast_node(227,type,"Position").
ast_node(227,level,9).
ast_node(228,type,"int").
ast_node(228,level,10).
ast_node(228,value,29).
ast_node(229,type,"str").
ast_node(229,level,10).
ast_node(229,value,"program.lp").
ast_node(230,type,"int").
ast_node(230,level,10).
ast_node(230,value,7).
ast_node(231,type,"Position").
ast_node(231,level,9).
ast_node(232,type,"int").
ast_node(232,level,10).
ast_node(232,value,36).
ast_node(233,type,"str").
ast_node(233,level,10).
ast_node(233,value,"program.lp").
ast_node(234,type,"int").
ast_node(234,level,10).
ast_node(234,value,7).
ast_node(235,type,"str").
ast_node(235,level,8).
ast_node(235,value,"Suspect").
ast_node(236,type,"int").
ast_node(236,level,6).
ast_node(236,value,0).
ast_node(237,type,"AST").
ast_node(237,level,3).
ast_node(237,variant,"Literal").
ast_node(237,value,"not guilty(Suspect)").
ast_node(238,type,"Location").
ast_node(238,level,4).
ast_node(239,type,"Position").
ast_node(239,level,5).
ast_node(240,type,"int").
ast_node(240,level,6).
ast_node(240,value,39).
ast_node(241,type,"str").
ast_node(241,level,6).
ast_node(241,value,"program.lp").
ast_node(242,type,"int").
ast_node(242,level,6).
ast_node(242,value,7).
ast_node(243,type,"Position").
ast_node(243,level,5).
ast_node(244,type,"int").
ast_node(244,level,6).
ast_node(244,value,58).
ast_node(245,type,"str").
ast_node(245,level,6).
ast_node(245,value,"program.lp").
ast_node(246,type,"int").
ast_node(246,level,6).
ast_node(246,value,7).
ast_node(247,type,"int").
ast_node(247,level,4).
ast_node(247,value,1).
ast_node(248,type,"AST").
ast_node(248,level,4).
ast_node(248,variant,"SymbolicAtom").
ast_node(248,value,"guilty(Suspect)").
ast_node(249,type,"AST").
ast_node(249,level,5).
ast_node(249,variant,"Function").
ast_node(249,value,"guilty(Suspect)").
ast_node(250,type,"Location").
ast_node(250,level,6).
ast_node(251,type,"Position").
ast_node(251,level,7).
ast_node(252,type,"int").
ast_node(252,level,8).
ast_node(252,value,43).
ast_node(253,type,"str").
ast_node(253,level,8).
ast_node(253,value,"program.lp").
ast_node(254,type,"int").
ast_node(254,level,8).
ast_node(254,value,7).
ast_node(255,type,"Position").
ast_node(255,level,7).
ast_node(256,type,"int").
ast_node(256,level,8).
ast_node(256,value,58).
ast_node(257,type,"str").
ast_node(257,level,8).
ast_node(257,value,"program.lp").
ast_node(258,type,"int").
ast_node(258,level,8).
ast_node(258,value,7).
ast_node(259,type,"str").
ast_node(259,level,6).
ast_node(259,value,"guilty").
ast_node(260,type,"ASTSequence").
ast_node(260,level,6).
ast_node(261,type,"AST").
ast_node(261,level,7).
ast_node(261,variant,"Variable").
ast_node(261,value,"Suspect").
ast_node(262,type,"Location").
ast_node(262,level,8).
ast_node(263,type,"Position").
ast_node(263,level,9).
ast_node(264,type,"int").
ast_node(264,level,10).
ast_node(264,value,50).
ast_node(265,type,"str").
ast_node(265,level,10).
ast_node(265,value,"program.lp").
ast_node(266,type,"int").
ast_node(266,level,10).
ast_node(266,value,7).
ast_node(267,type,"Position").
ast_node(267,level,9).
ast_node(268,type,"int").
ast_node(268,level,10).
ast_node(268,value,57).
ast_node(269,type,"str").
ast_node(269,level,10).
ast_node(269,value,"program.lp").
ast_node(270,type,"int").
ast_node(270,level,10).
ast_node(270,value,7).
ast_node(271,type,"str").
ast_node(271,level,8).
ast_node(271,value,"Suspect").
ast_node(272,type,"int").
ast_node(272,level,6).
ast_node(272,value,0).
ast_edge((0,1),key,0).
ast_edge((1,2),key,"location").
ast_edge((2,3),key,"begin").
ast_edge((3,4),key,"column").
ast_edge((3,5),key,"filename").
ast_edge((3,6),key,"line").
ast_edge((2,7),key,"end").
ast_edge((7,8),key,"column").
ast_edge((7,9),key,"filename").
ast_edge((7,10),key,"line").
ast_edge((1,11),key,"name").
ast_edge((1,12),key,"parameters").
ast_edge((0,13),key,1).
ast_edge((13,14),key,"location").
ast_edge((14,15),key,"begin").
ast_edge((15,16),key,"column").
ast_edge((15,17),key,"filename").
ast_edge((15,18),key,"line").
ast_edge((14,19),key,"end").
ast_edge((19,20),key,"column").
ast_edge((19,21),key,"filename").
ast_edge((19,22),key,"line").
ast_edge((13,23),key,"head").
ast_edge((23,24),key,"location").
ast_edge((24,25),key,"begin").
ast_edge((25,26),key,"column").
ast_edge((25,27),key,"filename").
ast_edge((25,28),key,"line").
ast_edge((24,29),key,"end").
ast_edge((29,30),key,"column").
ast_edge((29,31),key,"filename").
ast_edge((29,32),key,"line").
ast_edge((23,33),key,"sign").
ast_edge((23,34),key,"atom").
ast_edge((34,35),key,"symbol").
ast_edge((35,36),key,"location").
ast_edge((36,37),key,"begin").
ast_edge((37,38),key,"column").
ast_edge((37,39),key,"filename").
ast_edge((37,40),key,"line").
ast_edge((36,41),key,"end").
ast_edge((41,42),key,"column").
ast_edge((41,43),key,"filename").
ast_edge((41,44),key,"line").
ast_edge((35,45),key,"name").
ast_edge((35,46),key,"arguments").
ast_edge((46,47),key,0).
ast_edge((47,48),key,"location").
ast_edge((48,49),key,"begin").
ast_edge((49,50),key,"column").
ast_edge((49,51),key,"filename").
ast_edge((49,52),key,"line").
ast_edge((48,53),key,"end").
ast_edge((53,54),key,"column").
ast_edge((53,55),key,"filename").
ast_edge((53,56),key,"line").
ast_edge((47,57),key,"symbol").
ast_edge((35,58),key,"external").
ast_edge((13,59),key,"body").
ast_edge((0,60),key,2).
ast_edge((60,61),key,"location").
ast_edge((61,62),key,"begin").
ast_edge((62,63),key,"column").
ast_edge((62,64),key,"filename").
ast_edge((62,65),key,"line").
ast_edge((61,66),key,"end").
ast_edge((66,67),key,"column").
ast_edge((66,68),key,"filename").
ast_edge((66,69),key,"line").
ast_edge((60,70),key,"head").
ast_edge((70,71),key,"location").
ast_edge((71,72),key,"begin").
ast_edge((72,73),key,"column").
ast_edge((72,74),key,"filename").
ast_edge((72,75),key,"line").
ast_edge((71,76),key,"end").
ast_edge((76,77),key,"column").
ast_edge((76,78),key,"filename").
ast_edge((76,79),key,"line").
ast_edge((70,80),key,"sign").
ast_edge((70,81),key,"atom").
ast_edge((81,82),key,"symbol").
ast_edge((82,83),key,"location").
ast_edge((83,84),key,"begin").
ast_edge((84,85),key,"column").
ast_edge((84,86),key,"filename").
ast_edge((84,87),key,"line").
ast_edge((83,88),key,"end").
ast_edge((88,89),key,"column").
ast_edge((88,90),key,"filename").
ast_edge((88,91),key,"line").
ast_edge((82,92),key,"name").
ast_edge((82,93),key,"arguments").
ast_edge((93,94),key,0).
ast_edge((94,95),key,"location").
ast_edge((95,96),key,"begin").
ast_edge((96,97),key,"column").
ast_edge((96,98),key,"filename").
ast_edge((96,99),key,"line").
ast_edge((95,100),key,"end").
ast_edge((100,101),key,"column").
ast_edge((100,102),key,"filename").
ast_edge((100,103),key,"line").
ast_edge((94,104),key,"symbol").
ast_edge((82,105),key,"external").
ast_edge((60,106),key,"body").
ast_edge((0,107),key,3).
ast_edge((107,108),key,"location").
ast_edge((108,109),key,"begin").
ast_edge((109,110),key,"column").
ast_edge((109,111),key,"filename").
ast_edge((109,112),key,"line").
ast_edge((108,113),key,"end").
ast_edge((113,114),key,"column").
ast_edge((113,115),key,"filename").
ast_edge((113,116),key,"line").
ast_edge((107,117),key,"head").
ast_edge((117,118),key,"location").
ast_edge((118,119),key,"begin").
ast_edge((119,120),key,"column").
ast_edge((119,121),key,"filename").
ast_edge((119,122),key,"line").
ast_edge((118,123),key,"end").
ast_edge((123,124),key,"column").
ast_edge((123,125),key,"filename").
ast_edge((123,126),key,"line").
ast_edge((117,127),key,"sign").
ast_edge((117,128),key,"atom").
ast_edge((128,129),key,"symbol").
ast_edge((129,130),key,"location").
ast_edge((130,131),key,"begin").
ast_edge((131,132),key,"column").
ast_edge((131,133),key,"filename").
ast_edge((131,134),key,"line").
ast_edge((130,135),key,"end").
ast_edge((135,136),key,"column").
ast_edge((135,137),key,"filename").
ast_edge((135,138),key,"line").
ast_edge((129,139),key,"name").
ast_edge((129,140),key,"arguments").
ast_edge((140,141),key,0).
ast_edge((141,142),key,"location").
ast_edge((142,143),key,"begin").
ast_edge((143,144),key,"column").
ast_edge((143,145),key,"filename").
ast_edge((143,146),key,"line").
ast_edge((142,147),key,"end").
ast_edge((147,148),key,"column").
ast_edge((147,149),key,"filename").
ast_edge((147,150),key,"line").
ast_edge((141,151),key,"symbol").
ast_edge((129,152),key,"external").
ast_edge((107,153),key,"body").
ast_edge((0,154),key,4).
ast_edge((154,155),key,"location").
ast_edge((155,156),key,"begin").
ast_edge((156,157),key,"column").
ast_edge((156,158),key,"filename").
ast_edge((156,159),key,"line").
ast_edge((155,160),key,"end").
ast_edge((160,161),key,"column").
ast_edge((160,162),key,"filename").
ast_edge((160,163),key,"line").
ast_edge((154,164),key,"head").
ast_edge((164,165),key,"location").
ast_edge((165,166),key,"begin").
ast_edge((166,167),key,"column").
ast_edge((166,168),key,"filename").
ast_edge((166,169),key,"line").
ast_edge((165,170),key,"end").
ast_edge((170,171),key,"column").
ast_edge((170,172),key,"filename").
ast_edge((170,173),key,"line").
ast_edge((164,174),key,"sign").
ast_edge((164,175),key,"atom").
ast_edge((175,176),key,"symbol").
ast_edge((176,177),key,"location").
ast_edge((177,178),key,"begin").
ast_edge((178,179),key,"column").
ast_edge((178,180),key,"filename").
ast_edge((178,181),key,"line").
ast_edge((177,182),key,"end").
ast_edge((182,183),key,"column").
ast_edge((182,184),key,"filename").
ast_edge((182,185),key,"line").
ast_edge((176,186),key,"name").
ast_edge((176,187),key,"arguments").
ast_edge((187,188),key,0).
ast_edge((188,189),key,"location").
ast_edge((189,190),key,"begin").
ast_edge((190,191),key,"column").
ast_edge((190,192),key,"filename").
ast_edge((190,193),key,"line").
ast_edge((189,194),key,"end").
ast_edge((194,195),key,"column").
ast_edge((194,196),key,"filename").
ast_edge((194,197),key,"line").
ast_edge((188,198),key,"name").
ast_edge((176,199),key,"external").
ast_edge((154,200),key,"body").
ast_edge((200,201),key,0).
ast_edge((201,202),key,"location").
ast_edge((202,203),key,"begin").
ast_edge((203,204),key,"column").
ast_edge((203,205),key,"filename").
ast_edge((203,206),key,"line").
ast_edge((202,207),key,"end").
ast_edge((207,208),key,"column").
ast_edge((207,209),key,"filename").
ast_edge((207,210),key,"line").
ast_edge((201,211),key,"sign").
ast_edge((201,212),key,"atom").
ast_edge((212,213),key,"symbol").
ast_edge((213,214),key,"location").
ast_edge((214,215),key,"begin").
ast_edge((215,216),key,"column").
ast_edge((215,217),key,"filename").
ast_edge((215,218),key,"line").
ast_edge((214,219),key,"end").
ast_edge((219,220),key,"column").
ast_edge((219,221),key,"filename").
ast_edge((219,222),key,"line").
ast_edge((213,223),key,"name").
ast_edge((213,224),key,"arguments").
ast_edge((224,225),key,0).
ast_edge((225,226),key,"location").
ast_edge((226,227),key,"begin").
ast_edge((227,228),key,"column").
ast_edge((227,229),key,"filename").
ast_edge((227,230),key,"line").
ast_edge((226,231),key,"end").
ast_edge((231,232),key,"column").
ast_edge((231,233),key,"filename").
ast_edge((231,234),key,"line").
ast_edge((225,235),key,"name").
ast_edge((213,236),key,"external").
ast_edge((200,237),key,1).
ast_edge((237,238),key,"location").
ast_edge((238,239),key,"begin").
ast_edge((239,240),key,"column").
ast_edge((239,241),key,"filename").
ast_edge((239,242),key,"line").
ast_edge((238,243),key,"end").
ast_edge((243,244),key,"column").
ast_edge((243,245),key,"filename").
ast_edge((243,246),key,"line").
ast_edge((237,247),key,"sign").
ast_edge((237,248),key,"atom").
ast_edge((248,249),key,"symbol").
ast_edge((249,250),key,"location").
ast_edge((250,251),key,"begin").
ast_edge((251,252),key,"column").
ast_edge((251,253),key,"filename").
ast_edge((251,254),key,"line").
ast_edge((250,255),key,"end").
ast_edge((255,256),key,"column").
ast_edge((255,257),key,"filename").
ast_edge((255,258),key,"line").
ast_edge((249,259),key,"name").
ast_edge((249,260),key,"arguments").
ast_edge((260,261),key,0).
ast_edge((261,262),key,"location").
ast_edge((262,263),key,"begin").
ast_edge((263,264),key,"column").
ast_edge((263,265),key,"filename").
ast_edge((263,266),key,"line").
ast_edge((262,267),key,"end").
ast_edge((267,268),key,"column").
ast_edge((267,269),key,"filename").
ast_edge((267,270),key,"line").
ast_edge((261,271),key,"name").
ast_edge((249,272),key,"external").

